<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="1" hostname="Shubham-Verma" name="com.testbroker.scripts.LoginTest" tests="2" failures="0" timestamp="2020-06-09T14:26:47 IST" time="-1591693056.000" errors="1">
  <testcase name="preCondition" time="-1591693056.000" classname="com.testbroker.scripts.LoginTest">
    <error type="org.testng.TestNGException" message="
Can inject only one of &lt;ITestContext, XmlTest, Method, Object[], ITestResult&gt; into a @BeforeMethod annotated preCondition.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated preCondition.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:437)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:351)
at org.testng.internal.Parameters.createParameters(Parameters.java:708)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:299)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </error>
  </testcase> <!-- preCondition -->
  <system-out/>
  <testcase name="validLoginTest" time="0.000" classname="com.testbroker.scripts.LoginTest">
    <skipped/>
  </testcase> <!-- validLoginTest -->
  <system-out/>
</testsuite> <!-- com.testbroker.scripts.LoginTest -->
